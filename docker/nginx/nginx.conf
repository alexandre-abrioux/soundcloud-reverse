user nginx;

# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes auto;

# Maximum open file descriptors per process;
# should be > worker_connections.
worker_rlimit_nofile 8192;

# Process needs to run in foreground within container
daemon off;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 8000;
    multi_accept on;
    use epoll;
}

http {

    # Define the MIME types for files.
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Hide nginx version information.
    server_tokens off;

    # Speed up file transfers by using sendfile() to copy directly
    # between descriptors rather than using read()/write().
    sendfile on;

    # How long to allow each connection to stay idle; longer values are better
    # for each individual client, particularly for SSL, but means that worker
    # connections are tied up longer. (Default: 65)
    keepalive_timeout 20;

    # Tell Nginx not to send out partial frames; this increases throughput
    # since TCP frames are filled up before being sent out. (adds TCP_CORK)
    tcp_nopush on;

    # Tell Nginx to enable the Nagle buffering algorithm for TCP packets, which
    # collates several smaller packets together into one larger packet, thus saving
    # bandwidth at the cost of a nearly imperceptible increase to latency. (removes TCP_NODELAY)
    tcp_nodelay off;

    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    map $remote_addr $log_ip {
        "127.0.0.1" 0;
        default 1;
    }

    # Format to use in log files
    log_format main '"$http_x_forwarded_for" $remote_addr - $remote_user [$time_local] "$host" "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" $request_time $upstream_response_time "$http_x_request_id"';
    access_log /var/log/nginx/access.log main if=$log_ip;

    # Compression
    gzip  on;
    brotli on;

    include /etc/nginx/conf.d/*.conf;

}
