version: "3.5"

networks:
  reverse-proxy:
    name: ${COMPOSE_NETWORK_REVERSE_PROXY}
    external: true

services:
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    image: ${COMPOSE_PROJECT_NAME}/nginx:${COMPOSE_APP_VERSION}
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        - "DOCKER_IMAGE_NODE=${DOCKER_IMAGE_NODE}"
    restart: ${COMPOSE_RESTART}
    environment:
      - "SOUNDCLOUD_CLIENT_ID=${SOUNDCLOUD_CLIENT_ID}"
      - "SOUNDCLOUD_REDIRECT_URI=${SOUNDCLOUD_REDIRECT_URI}"
    networks:
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_NETWORK_REVERSE_PROXY}"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-stripprefix.stripprefix.prefixes=${TRAEFIK_STRIPPREFIX}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=${TRAEFIK_RULE}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.rule=${TRAEFIK_RULE}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.entrypoints=websecure"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.middlewares=${COMPOSE_PROJECT_NAME}-stripprefix"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80"
